# -*- coding: utf-8 -*-
"""Untitled30.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Di9bK3wVoWErAOsJL5QJLUPUP4yz5Spt
"""

import pandas as pd
import numpy as np
import cv2
import os
import matplotlib.pyplot as plt

# ‚öôÔ∏è Config
CSV_PATH = "/content/player_tracks.csv"
FIELD_IMAGE_PATH = "/content/istockphoto-1176781177-612x612.jpg"
OUTPUT_DIR = "player_heatmaps"
FIELD_WIDTH, FIELD_HEIGHT = 800, 500  # Match your use case

# Define the actual width and height of the original frames
# Replace these with the correct values from your data source
ACTUAL_FRAME_WIDTH = 1920  # Example: Replace with your frame width
ACTUAL_FRAME_HEIGHT = 1080 # Example: Replace with your frame height


# üìÇ Make output directory
os.makedirs(OUTPUT_DIR, exist_ok=True)

# üì• Load data
df = pd.read_csv(CSV_PATH)

# ‚úÖ Normalize positions to field
# Use the actual frame dimensions instead of DataFrame columns
df['x_field'] = (df['x'] / ACTUAL_FRAME_WIDTH) * FIELD_WIDTH
df['y_field'] = (df['y'] / ACTUAL_FRAME_HEIGHT) * FIELD_HEIGHT

# üì∑ Load field background
field_img = cv2.imread(FIELD_IMAGE_PATH)
field_img = cv2.resize(field_img, (FIELD_WIDTH, FIELD_HEIGHT))

# üî• Generate heatmap for each player
for player_id in df['player_id'].unique():
    player_df = df[df['player_id'] == player_id]
    heatmap = np.zeros((FIELD_HEIGHT, FIELD_WIDTH), dtype=np.float32)

    for _, row in player_df.iterrows():
        x, y = int(row['x_field']), int(row['y_field'])
        if 0 <= x < FIELD_WIDTH and 0 <= y < FIELD_HEIGHT:
            heatmap[y, x] += 1

    # üåÄ Smooth and color
    heatmap = cv2.GaussianBlur(heatmap, (0, 0), sigmaX=20, sigmaY=20)
    heatmap = cv2.normalize(heatmap, None, 0, 255, cv2.NORM_MINMAX).astype(np.uint8)
    heatmap_colored = cv2.applyColorMap(heatmap, cv2.COLORMAP_JET)

    # üßÉ Blend with field
    overlay = cv2.addWeighted(field_img, 0.6, heatmap_colored, 0.4, 0)
    cv2.putText(overlay, f"Player {player_id}", (30, 40), cv2.FONT_HERSHEY_SIMPLEX, 1.2, (255,255,255), 3)

    # üíæ Save & display
    out_path = os.path.join(OUTPUT_DIR, f"player_{player_id}_heatmap.png")
    cv2.imwrite(out_path, overlay)

    # üñº Show inline
    plt.figure(figsize=(10, 6))
    plt.imshow(cv2.cvtColor(overlay, cv2.COLOR_BGR2RGB))
    plt.title(f"Heatmap: Player {player_id}")
    plt.axis('off')
    plt.show()